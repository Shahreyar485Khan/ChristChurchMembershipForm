/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms.admin;

import Forms.databaseConnect;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shahryar Khan
 */
public class showAllData extends javax.swing.JFrame {

    /**
     * Creates new form showAllData
     */
    databaseConnect dbcon;
    public showAllData() {
        initComponents();
        this.jScrollPane2.getVerticalScrollBar().setUnitIncrement(16);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mRecord = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        fmRecord = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("View All Records");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setText("SHOW ALL RECORDS");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("ALL MEMBERS RECORDS");

        mRecord.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CH. MEM#", "PERV. CHURCH", "MEM. SINCE", "OLD MEM#", "H-NAME", "FATHER NAME", "MARITAL ST.", "H-QUALIFICATION", "H-NATIONALITY", "H-BAPTIZ AT", "H-BAPTIZ DATE", "H-CNIC#", "H-DOB", "MARRIED AT", "MARRIAGE DATE", "H-EMAIL", "RES#", "MOB#", "WHATSAPP#", "PRESENT ADDR.", "PERMENENT ADDR.", "PROFESSION", "ORGANIZATION", "OFFICE ADDR.", "OFFICE CONTACT#", "S-NAME", "S-QUALIFICATION", "S-NATIONALITY", "S-BAPTISE AT", "S-BAPTISM DATE", "S-CNIC#", "S-DOB", "S_E-MAIL", "S-PROFESSION", "S-ORGANIZATION", "S-OFFICE ADDR.", "S-OFFICE CONTACT#", "ASSIST IN CH.", "SOLEMNLY PLEDGE PKR", "SOLEMNLY PLEDGE IN WORDS", "PLEDGE REMINDER", "INTERVIEWED BY", "REMARKS", "RECORD ENTRY DATE", "JOINING DATE"
            }
        ));
        mRecord.getTableHeader().setReorderingAllowed(false);
        mRecord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mRecordMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(mRecord);

        fmRecord.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "F-MEMBER ID", "Name", "Relation", "DOB"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        fmRecord.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(fmRecord);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("ALL MEMBERS RECORDS");

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setText("SHOW RECORDS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setText("CLEAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(28, 28, 28)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1386, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 4394, Short.MAX_VALUE)))
                .addGap(20, 20, 20))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(67, 67, 67)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addGap(0, 698, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        populateAllData();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
         DefaultTableModel model = (DefaultTableModel) mRecord.getModel();
        
            model.setRowCount(0);
            
             DefaultTableModel model2 = (DefaultTableModel) fmRecord.getModel();
        
            model2.setRowCount(0);
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    
 private int getRowIndexesOfValue(String value, JTable table) {

  int rowNumbers=-1;

   for(int rowCount = 0; rowCount < table.getRowCount(); rowCount++) {
      for(int columnCount = 0; columnCount < table.getColumnCount(); columnCount++) {
          if(table.getValueAt(rowCount, 0).toString().equals(value)) {
            rowNumbers = rowCount;
             break;  
          }
       }
    }
    return rowNumbers;
}
    
    private void mRecordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mRecordMouseClicked
      
        
          DefaultTableModel model = (DefaultTableModel) mRecord.getModel();

        String mbr_id = (String) model.getValueAt(mRecord.getSelectedRow(),0);
      //  String textField2 = (String) model.getValueAt(mRecord.getSelectedRow(),2);
       int row = getRowIndexesOfValue(mbr_id,fmRecord);
        
        ListSelectionModel model2 = fmRecord.getSelectionModel();
        model2.clearSelection();
        model2.addSelectionInterval(row, row);
        
    }//GEN-LAST:event_mRecordMouseClicked

    /**
     * @param args the command line arguments
     */
    
    
   public  void populateAllData()
   {
       
       
          DefaultTableModel mtable = (DefaultTableModel) mRecord.getModel();
           try {
            //Class.forName("java.sql.DriverManager");
              Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/christ_church_db", "root", "mysqldb");


            Statement stmt = con.createStatement();
            
             String fmquery = "select * from members ";
         
            ResultSet rs=stmt.executeQuery(fmquery);

          
         
             while(rs.next()) {
                 
                 
                 String id1 = rs.getString("id");

                String mbr_old = rs.getString("mbr_ship_no_old");
                String mbt_sin = rs.getString("mbr_ch_since");
                String per_ch = rs.getString("mbr_church_pa");

                String hname = rs.getString("h_name");
                String hfname = rs.getString("h_hf_name");

                String hms = rs.getString("h_material_st");

                java.sql.Date hdob_temp = rs.getDate("h_dob");

                String h_mat = rs.getString("h_married_at");
                java.sql.Date hdat_mar_temp = rs.getDate("h_date_mar");

                String hemail = rs.getString("h_email");

                String hres = rs.getString("h_cont_res");
                String hmob = rs.getString("h_cont_mob");
                String hwa = rs.getString("h_cont_wapp");

                String hpar = rs.getString("h_par_address");
                String hper = rs.getString("h_perm_address");

                String hnation = rs.getString("h_nation");
                String hqual = rs.getString("h_qual");

                String hbapt = rs.getString("h_bapt");
                java.sql.Date hbapt_dt_temp = rs.getDate("h_date_bapt");

                String hprof = rs.getString("h_prof");
                String horg = rs.getString("h_org");
                String hoffad = rs.getString("h_offc_address");
                String hcoff = rs.getString("h_cont_offc");

                String hcnic = rs.getString("h_cnic");

                String yd = rs.getString("y_details");

                String s_name = rs.getString("s_name");

                String s_qual = rs.getString("s_qual");
                String s_nation = rs.getString("s_nation");

                String s_bapt = rs.getString("s_bapt");

                java.sql.Date s_dt_bapt_temp = rs.getDate("s_date_bapt");

                java.sql.Date s_dob_temp = rs.getDate("s_dob");
                String s_cnic = rs.getString("s_cnic");

                String s_email = rs.getString("s_email");

                String s_prof = rs.getString("s_prof");
                String s_off = rs.getString("s_offc_address");
                String s_coff = rs.getString("s_cont_offc");
                String s_org = rs.getString("s_org");

                String g_ass = rs.getString("g_ch_minst");

                String p_plg = rs.getString("p_solemnly_pldg");
                String p_wplg = rs.getString("p_pldg_words");
                String p_rem = rs.getString("p_pldg_rem");

                String o_int = rs.getString("o_interview");
                String o_remark = rs.getString("o_remark");

                java.sql.Date red_temp = rs.getDate("entry_date");
                
                  java.sql.Date d_temp = rs.getDate("mbr_join");


                
          

               mtable.addRow(new Object[] {id1 ,per_ch , mbt_sin ,mbr_old ,hname ,hfname ,hms , hqual ,hnation ,hbapt ,hbapt_dt_temp, hcnic,   
                   hdob_temp,h_mat, hdat_mar_temp,hemail ,hres ,hmob ,hwa ,
                    hpar ,hper , hprof ,horg ,hoffad,hcoff , s_name,s_qual , s_nation, s_bapt,s_dt_bapt_temp, s_cnic,
                     s_dob_temp, s_email, s_prof,s_org, s_off,s_coff,
                      g_ass,p_plg , p_wplg,p_rem, o_int,o_remark, red_temp,d_temp});
               
                
                
                
                
                
              
                
               
              // mtable.addRow(new Object[] {id1, per_ch, mbt_sin, mbr_old, hname, hfname, hms, hqual,  hnation, hbapt, hbapt_dt_temp});
               
            }
             
       
          rs.close();
            //stmt.close();
            //con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }
        
       
       
           
       
       
       
       
            
          
            DefaultTableModel fmtable = (DefaultTableModel) fmRecord.getModel();
           try {
            //Class.forName("java.sql.DriverManager");
             //Connection con = dbcon.dbConnect();

            Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/christ_church_db", "root", "mysqldb");
            Statement stmt = con.createStatement();
            
             String fmquery = "select * from members_family_info ";
         
            ResultSet fmrs=stmt.executeQuery(fmquery);

          
         
             while(fmrs.next()) {
                String id1 = fmrs.getString("id_mfi");
                String name = fmrs.getString("f_family_members");
                String rel = fmrs.getString("f_relationship");
                
               java.sql.Date ydob_temp = fmrs.getDate("f_dob");
                
                
                String idnew = fmrs.getString("id_m");
                String d ="d";


                
          

               fmtable.addRow(new Object[] {id1,idnew, name,rel,ydob_temp});
            }
             
             
             
             
             
           
            fmrs.close();
            //stmt.close();
            //con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            //e.printStackTrace();
        }
        
       
       
       
       
       
   }
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("matel".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(showAllData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(showAllData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(showAllData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(showAllData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               showAllData sad = new showAllData();
               //sad.populateAllData();
               
               sad.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable fmRecord;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable mRecord;
    // End of variables declaration//GEN-END:variables
}
